% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Randomization_functions.R
\name{randomize_asymmetric}
\alias{randomize_asymmetric}
\title{Maximise pairwise asymmetry}
\usage{
randomize_asymmetric(it, ij_col, ji_col)
}
\arguments{
\item{it}{interaction table (created by interaction_strengths())}

\item{ij_col}{column of a_ij values to randomise (choose scaled or unscaled)}

\item{ji_col}{column of a_ji values to randomise (scaled or unscaled)}
}
\value{
Interaction table with two additional columns \emph{$a_ij_asym} and \emph{$a_ji_asym},
containing randomised interaction strengths
}
\description{
During this randomisation procedure, all interaction strengths are reordered to
make the 2-link loops in the randomised system as asymmetric as possible. Diagonal values
and network topology are preserved.
}
\details{
To do this, all links are ordered by size. Then, the very strongest link is paired with the
weakest one, the second strongest with the second weakest etc. The location of
pairwise interactions in the network is chosen randomly. Also, links are randomised
between the ij and ji column, so that the strong links can appear both above and below
the diagonal.

The function returns a new interaction table that contains two new columns $a_ij_asym and
$a_ji_asym that contains the same values as the original columns but in a different order.

To get a Jacobian matrix with maximised pairwise asymmetry, use assemble_jacobian() and specify
the new columns.
}
